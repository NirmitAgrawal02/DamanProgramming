Evaluator Queries:-



1. If-then-else:
program(P, [start, int, x, =, 8,;, if,x,==,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 8,;, if,x,<=,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 11,;, if,x,<=,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 7,;, if,x,>=,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 7,;, if,x,<,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 7,;, if,x,>,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, =, 7,;, if,not,x,>,9 , then, x, =, 7, else, x , = , 3 , fi, finish, .], []), write(P), program_eval(P,EnvOut).

2. Ternary Operator:
program(P, [start, int, x, = ,2, ;, x, == ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,2, ;, x, > ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,2, ;, x, < ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,3, ;, x, >= ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,1, ;, x, <= ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,1, ;, not,x, == ,3 ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).
program(P, [start, int, x, = ,1, ;, true ,'?',x ,= ,x ,+, 1, ':' ,x ,= ,x ,+, 2, finish, .], []), write(P), program_eval(P,EnvOut).

